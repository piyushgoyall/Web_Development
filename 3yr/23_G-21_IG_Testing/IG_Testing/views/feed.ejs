<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Instagram Style Feed</title>
    <link rel="stylesheet" href="./stylesheets/feed.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
  </head>
  <body>
    <header class="feed-header">
      <div class="container">
        <img src="/images/instagram-logo.png" alt="logo" class="logo-img" />
        <h1 class="logo"></h1>
        <div class="user-greeting">Hi, <%= user.username %></div>
      </div>
    </header>

    <!-- Sidebar Structure -->
    <div class="sidebar">
      <div class="sidebar-logo">
        <h1>Instagram</h1>
      </div>
      <a href="/feed"><i class="fas fa-home"></i> Home</a>
      <a href="#"><i class="fas fa-search"></i> Search</a>
      <a href="#"><i class="fas fa-compass"></i> Explore</a>
      <a href="#"><i class="fas fa-video"></i> Reels</a>
      <a href="#"><i class="fas fa-envelope"></i> Messages</a>
      <a href="/followRequests"><i class="fas fa-heart"></i> Notifications</a>
      <a href="/upload"><i class="fas fa-plus-square"></i> Create</a>
      <a href="/profile"><i class="fas fa-user"></i> Profile</a>
      <!-- <a href="/followRequests"
        ><i class="fas fa-user-friends"></i> Follow Requests</a> -->
    </div>

    <main class="feed-container">
      <div class="feed">
        <% posts.reverse().forEach(function(elem) { %>
        <div class="post">
          <div class="post-header">
            <img
              src="./images/profiles/<%= elem.user.profileImage %>"
              alt="user-profile"
              class="user-profile"
            />
            <p class="username"><%= elem.user.username %></p>
          </div>
          <img
            src="./images/uploads/<%= elem.picture %>"
            alt="post-image"
            class="post-image"
          />
          <div class="post-actions">
            <div class="icons">
              <span
                class="action like-btn"
                data-post-id="<%= elem._id %>"
                data-liked="<%= elem.likes.includes(user._id) %>"
              >
                <%= elem.likes.includes(user._id) ? '❤️' : '🖤' %>
              </span>
              <span class="action comment-btn" data-post-id="<%= elem._id %>">
                <i class="fas fa-comment"></i>
              </span>
              <span class="action share-btn"
                ><i class="fas fa-paper-plane"></i
              ></span>
            </div>
            <span class="like-count"><%= elem.likes.length %> likes</span>
          </div>
          <div class="post-caption">
            <p>
              <span class="username"><%= elem.user.username %></span> <%=
              elem.caption %>
            </p>
          </div>
        </div>
        <% }) %>
      </div>

      <!-- Suggested Users Section -->
      <div class="random-users-section">
        <h3>Suggested Users</h3>
        <div id="randomUsersContainer"></div>
      </div>
    </main>

    <!-- Modal Structure -->
    <div class="modal-overlay" id="commentModal">
      <div class="modal-close" onclick="closeModal()">✖</div>
      <div class="modal-content">
        <div class="modal-post-image" id="modalPostImage"></div>
        <div class="modal-comments">
          <div id="commentList"></div>
          <div class="comment-input">
            <input
              type="text"
              placeholder="Add a comment..."
              id="commentInput"
            />
            <button onclick="submitComment()">Post</button>
          </div>
        </div>
      </div>
    </div>

    <script>
      document.querySelectorAll(".like-btn").forEach((button) => {
        button.addEventListener("click", async function () {
          const postId = this.dataset.postId;
          const isLiked = this.dataset.liked === "true";
          const response = await fetch(`/likePost/${postId}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
          });
          const data = await response.json();
          if (data.success) {
            this.dataset.liked = !isLiked;
            this.innerHTML = data.liked ? "❤️" : "🖤";
            this.style.border = data.liked
              ? "1px solid red"
              : "1px solid black"; // Change border color
            this.closest(".post-actions").querySelector(
              ".like-count"
            ).innerHTML = `${data.likeCount} likes`;
          }
        });
      });

      document.querySelectorAll(".comment-btn").forEach((button) => {
        button.addEventListener("click", async function () {
          const postId = this.getAttribute("data-post-id");
          const response = await fetch(`/getPostComments/${postId}`);
          const data = await response.json();

          if (data.success) {
            document.getElementById(
              "modalPostImage"
            ).style.backgroundImage = `url('/images/uploads/${data.post.picture}')`;
            const commentList = document.getElementById("commentList");
            commentList.innerHTML = "";
            data.comments.forEach((comment) => {
              const commentElem = document.createElement("p");
              commentElem.textContent = `${comment.user.username}: ${comment.text}`;
              commentList.appendChild(commentElem);
            });
            document.getElementById("commentModal").style.display = "flex";
          }
        });
      });

      function closeModal() {
        document.getElementById("commentModal").style.display = "none";
      }

      async function submitComment() {
        const postId = document
          .querySelector(".comment-btn[data-post-id]")
          .getAttribute("data-post-id");
        const commentText = document.getElementById("commentInput").value;
        if (commentText.trim() !== "") {
          const response = await fetch(`/addComment/${postId}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ text: commentText }),
          });
          const data = await response.json();
          if (data.success) {
            const newComment = document.createElement("p");
            newComment.textContent = `${data.user.username}: ${data.comment.text}`;
            document.getElementById("commentList").appendChild(newComment);
            document.getElementById("commentInput").value = "";
          }
        }
      }

      // Suggested Users Fetch
      async function fetchRandomUsers() {
        const response = await fetch("/randomUsers");
        const data = await response.json();

        if (data.success) {
          const container = document.getElementById("randomUsersContainer");
          container.innerHTML = "";
          data.users.forEach((user) => {
            const userElem = document.createElement("div");
            userElem.classList.add("random-user");
            userElem.innerHTML = `
                        <p class="username"><a href="/profile/${user._id}">${user.username}</a></p>
                        <button onclick="toggleFollow('${user._id}', this)">Follow</button>
                    `;
            container.appendChild(userElem);
          });
        }
      }

      async function toggleFollow(userId, button) {
        const response = await fetch(`/follow/${userId}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
        });
        const data = await response.json();

        if (data.success) {
          button.innerText =
            button.innerText === "Follow" ? "Unfollow" : "Follow";
        }
      }

      fetchRandomUsers();
    </script>
  </body>
</html>
